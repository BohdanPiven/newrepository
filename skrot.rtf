{\rtf1\ansi\ansicpg1251\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh15020\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from flask import Flask, render_template_string, session, redirect, url_for, flash, request, send_from_directory\
from werkzeug.utils import secure_filename\
import os\
from datetime import datetime\
import uuid\
import threading\
\
app = Flask(__name__)\
app.secret_key = 'your_secret_key'\
app.config['UPLOAD_FOLDER'] = 'uploads'\
MAX_ATTACHMENTS = 5\
\
# Upewnij si\uc0\u281 , \u380 e folder uploads istnieje\
os.makedirs(app.config['UPLOAD_FOLDER'], exist_ok=True)\
\
# Przyk\uc0\u322 adowe funkcje (zast\u261 p w\u322 asnymi implementacjami)\
def get_data_from_sheet():\
    return \{\}\
\
def get_unique_segments_with_counts(data):\
    return \{"Segment1": \{"Polski": 10, "Zagraniczny": 5\}\}\
\
def get_emails_for_segment(data, segment, language):\
    return ["email1@example.com", "email2@example.com"]\
\
def allowed_file(filename):\
    ALLOWED_EXTENSIONS = \{'txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif', 'ico'\}\
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS\
\
def send_emails_async(emails, subject, body, user, attachment_paths):\
    pass  # Implementacja wysy\uc0\u322 ki emaili\
\
@app.route('/favicon.ico')\
def favicon():\
    return send_from_directory(os.path.join(app.root_path, 'static'),\
                               'favicon.ico', mimetype='image/vnd.microsoft.icon')\
\
@app.route('/', methods=['GET', 'POST'])\
def index():\
    if 'user_id' not in session:\
        return redirect(url_for('login'))\
\
    data = get_data_from_sheet()\
    user_id = session['user_id']\
    user = None  # Zast\uc0\u261 p rzeczywist\u261  logik\u261  pobierania u\u380 ytkownika\
    if not user:\
        flash('U\uc0\u380 ytkownik nie istnieje.', 'error')\
        return redirect(url_for('login'))\
\
    if request.method == 'POST':\
        subject = request.form.get('subject', '')\
        body = request.form.get('message', '')\
        selected_segments = request.form.getlist('segments')\
        selected_language = request.form.get('language', '')\
        emails = []\
\
        # Pobranie zaznaczonych adres\'f3w email do w\uc0\u322 \u261 czenia\
        include_emails = request.form.getlist('include_emails')\
\
        # Obs\uc0\u322 uga za\u322 \u261 cznik\'f3w\
        attachment_paths = []\
        if 'attachments' in request.files:\
            files = request.files.getlist('attachments')\
            # Usuni\uc0\u281 cie pustych plik\'f3w\
            files = [file for file in files if file.filename]\
            if len(files) > MAX_ATTACHMENTS:\
                flash(f'Mo\uc0\u380 esz przes\u322 a\u263  maksymalnie \{MAX_ATTACHMENTS\} za\u322 \u261 cznik\'f3w.', 'error')\
            else:\
                for file in files:\
                    if file and allowed_file(file.filename):\
                        # Generowanie unikalnej nazwy pliku\
                        original_filename = secure_filename(file.filename)\
                        unique_suffix = datetime.utcnow().strftime("%Y%m%d%H%M%S%f") + "_" + str(uuid.uuid4())\
                        unique_filename = f"\{unique_suffix\}_\{original_filename\}"\
                        local_path = os.path.join(app.config['UPLOAD_FOLDER'], unique_filename)\
                        \
                        # Zapisz plik lokalnie\
                        file.save(local_path)\
                        attachment_paths.append(local_path)\
                    elif file and not allowed_file(file.filename):\
                        flash(f'Plik \{file.filename\} ma niedozwolone rozszerzenie.', 'error')\
\
        # P\uc0\u281 tla po segmentach, aby zebra\u263  e-maile\
        for segment in selected_segments:\
            segment_emails_polski = get_emails_for_segment(data, segment, "Polski")\
            segment_emails_zagraniczny = get_emails_for_segment(data, segment, "Zagraniczny")\
            if selected_language == "Polski":\
                segment_emails = [email for email in segment_emails_polski if email in include_emails]\
            else:\
                segment_emails = [email for email in segment_emails_zagraniczny if email in include_emails]\
            emails += segment_emails\
\
        # Usuni\uc0\u281 cie duplikat\'f3w\
        emails = list(set(emails))\
\
        # Debug: Sprawdzenie attachment_paths\
        app.logger.debug(f"Attachment paths: \{attachment_paths\}")\
\
        if emails:\
            # Utworzenie i uruchomienie w\uc0\u261 tku do wysy\u322 ania e-maili\
            email_thread = threading.Thread(target=send_emails_async, args=(emails, subject, body, user, attachment_paths))\
            email_thread.start()\
\
            # Wy\uc0\u347 wietlenie komunikatu po rozpocz\u281 ciu wysy\u322 ania\
            flash('Rozpocz\uc0\u281 to wysy\u322 anie wiadomo\u347 ci! Mo\u380 esz zamkn\u261 \u263  stron\u281  lub kontynuowa\u263 .', 'success')\
            return redirect(url_for('index'))\
        else:\
            flash('Nie wybrano \uc0\u380 adnych adres\'f3w e-mail do wys\u322 ania.', 'warning')\
\
    segments = get_unique_segments_with_counts(data)\
    notes = []  # Zast\uc0\u261 p rzeczywist\u261  logik\u261  pobierania notatek\
\
    # Szablon g\uc0\u322 \'f3wny (panel)\
    index_template = '''\
    <!DOCTYPE html>\
    <html lang="pl">\
    <head>\
        <meta charset="UTF-8">\
        <title>Ranges - Panel G\uc0\u322 \'f3wny</title>\
        \
        <!-- Dodanie favicon -->\
        <link rel="icon" href="\{\{ url_for('static', filename='favicon.ico') \}\}" type="image/x-icon">\
        <link rel="shortcut icon" href="\{\{ url_for('static', filename='favicon.ico') \}\}" type="image/x-icon">\
        \
        <!-- Opcjonalnie: Dodatkowe formaty favicon -->\
        <link rel="apple-touch-icon" sizes="180x180" href="\{\{ url_for('static', filename='apple-touch-icon.png') \}\}">\
        <link rel="icon" type="image/png" sizes="32x32" href="\{\{ url_for('static', filename='favicon-32x32.png') \}\}">\
        <link rel="icon" type="image/png" sizes="16x16" href="\{\{ url_for('static', filename='favicon-16x16.png') \}\}">\
        <link rel="manifest" href="\{\{ url_for('static', filename='site.webmanifest') \}\}">\
        \
        <!-- Twoje istniej\uc0\u261 ce style -->\
        <style>\
            /* Stylizacja panelu g\uc0\u322 \'f3wnego */\
            body \{\
                font-family: 'Quantico', sans-serif;\
                background-color: #141414; /* Neon dark background */\
                color: #39FF14; /* Neon green text */\
                padding: 20px;\
                background-image: url("\{\{ url_for('static', filename='greek_key.png') \}\}"); /* Grecki wz\'f3r klucza */\
                background-repeat: repeat;\
                background-size: 50px 50px;\
                position: relative; /* Dodane dla pozycjonowania user-info */\
            \}\
            .container \{\
                max-width: 1200px;\
                margin: 0 auto;\
                background-color: rgba(26, 26, 26, 0.9); /* Semi-transparent background */\
                padding: 20px;\
                border-radius: 10px;\
                box-shadow: 0 4px 20px rgba(57, 255, 20, 0.5); /* Neon glow */\
                position: relative;\
            \}\
            h1 \{\
                text-align: center;\
                margin-bottom: 20px;\
                color: #FFD700; /* Z\uc0\u322 oty kolor neonowy */\
                text-shadow: 0 0 10px #FFD700, 0 0 20px #FFD700, 0 0 30px #FFD700;\
            \}\
            .user-info \{\
                position: absolute;\
                top: 20px;\
                right: 20px;\
                color: #39FF14;\
            \}\
            p.welcome \{\
                margin: 0;\
            \}\
            form \{\
                background-color: rgba(42, 42, 42, 0.9);\
                padding: 20px;\
                border-radius: 10px;\
                box-shadow: 0 4px 20px rgba(57, 255, 20, 0.5); /* Neon glow */\
                margin-bottom: 30px;\
            \}\
            label \{\
                display: block;\
                margin-top: 10px;\
                font-weight: bold;\
                color: #39FF14;\
            \}\
            input[type="text"], input[type="email"], input[type="password"], textarea, select, input[type="file"] \{\
                width: 100%;\
                padding: 10px;\
                margin-top: 5px;\
                border: 1px solid #333333;\
                border-radius: 5px;\
                box-sizing: border-box;\
                font-size: 16px;\
                background-color: #333333; /* Dark input backgrounds */\
                color: #39FF14;\
                transition: border-color 0.3s;\
            \}\
            input[type="text"]:focus, input[type="email"]:focus, input[type="password"]:focus, textarea:focus, select:focus, input[type="file"]:focus \{\
                outline: none;\
                border-color: #39FF14;\
                box-shadow: 0 0 5px #39FF14;\
            \}\
            button \{\
                background-color: #39FF14;\
                color: #1a1a1a;\
                padding: 10px 20px;\
                border: none;\
                border-radius: 5px;\
                cursor: pointer;\
                font-size: 16px;\
                margin-top: 20px;\
                transition: background-color 0.3s, transform 0.2s;\
                box-shadow: 0 4px 20px rgba(57, 255, 20, 0.5); /* Neon glow */\
            \}\
            button:hover \{\
                background-color: #28a745;\
                transform: scale(1.05);\
                box-shadow: 0 8px 30px rgba(40, 167, 69, 0.5);\
            \}\
            button:active \{\
                transform: scale(0.95);\
            \}\
            .flash-message \{\
                background-color: rgba(31, 143, 241, 0.8);\
                color: #1a1a1a;\
                padding: 10px;\
                border-radius: 5px;\
                margin: 10px 0;\
                text-align: center;\
                box-shadow: 0 2px 10px rgba(57, 255, 20, 0.3);\
            \}\
            .flash-message.error \{\
                background-color: rgba(255, 77, 77, 0.8);\
                color: #1a1a1a;\
            \}\
            .flash-message.success \{\
                background-color: rgba(40, 167, 69, 0.8);\
                color: #1a1a1a;\
            \}\
            .flash-message.warning \{\
                background-color: rgba(255, 193, 7, 0.8);\
                color: #1a1a1a;\
            \}\
            a \{\
                color: #39FF14;\
                text-decoration: none;\
            \}\
            a:hover \{\
                text-decoration: underline;\
            \}\
            .segment-list, .email-list \{\
                margin-top: 10px;\
            \}\
            .segment-list \{\
                display: none; /* Segment list is collapsed by default */\
            \}\
            .segment-list.show \{\
                display: block;\
            \}\
            .segment \{\
                background-color: rgba(42, 42, 42, 0.9);\
                padding: 10px;\
                border-radius: 5px;\
                margin-bottom: 5px;\
                cursor: pointer;\
                display: flex;\
                justify-content: space-between;\
                align-items: center;\
                border-left: 5px solid rgba(57, 255, 20, 0.7); /* More transparent border */\
                transition: background-color 0.3s ease;\
            \}\
            .segment:hover \{\
                background-color: rgba(58, 58, 58, 0.9);\
            \}\
            .segment input[type="checkbox"] \{\
                margin-right: 10px;\
                transform: scale(1.2);\
            \}\
            .segment-title \{\
                font-weight: bold;\
                white-space: nowrap;\
                overflow: hidden;\
                text-overflow: ellipsis;\
                flex-grow: 1;\
            \}\
            .segment-count \{\
                font-size: small;\
                color: #FFD700;\
                margin-left: 10px;\
            \}\
            .checkbox-container \{\
                display: flex;\
                align-items: center;\
                margin: 5px 0;\
            \}\
            .checkbox-container label \{\
                margin-left: 10px;\
                flex-grow: 1;\
                white-space: nowrap;\
                overflow: hidden;\
                text-overflow: ellipsis;\
                cursor: pointer;\
                color: #FFFFFF;\
            \}\
            .checkbox-btn-container \{\
                display: none;\
                justify-content: flex-end;\
                gap: 10px;\
                margin-top: 10px;\
            \}\
            .segment-list.show .checkbox-btn-container \{\
                display: flex;\
            \}\
            .email-list \{\
                display: none; /* Email lists are collapsed by default */\
                padding-left: 20px;\
                background-color: rgba(26, 26, 26, 0.9);\
                border-radius: 5px;\
                margin-bottom: 10px;\
                box-shadow: 0 2px 10px rgba(57, 255, 20, 0.3);\
            \}\
            .email-list.show \{\
                display: block;\
            \}\
            .button-container \{\
                text-align: right;\
                margin-top: 20px;\
                position: relative;\
            \}\
            .button-container .spinner \{\
                display: none;\
                position: absolute;\
                right: 20px;\
                top: 50%;\
                transform: translateY(-50%);\
            \}\
            .spinner \{\
                display: none; /* Hide all spinners by default */\
                border: 4px solid #f3f3f3;\
                border-top: 4px solid #39FF14;\
                border-radius: 50%;\
                width: 24px;\
                height: 24px;\
                animation: spin 1s linear infinite;\
            \}\
            @keyframes spin \{\
                0% \{ transform: rotate(0deg); \}\
                100% \{ transform: rotate(360deg); \}\
            \}\
            .note-section \{\
                background-color: rgba(26, 26, 26, 0.9);\
                padding: 20px;\
                border: 1px solid #333333;\
                border-radius: 10px;\
                margin-top: 30px;\
                box-shadow: 0 4px 20px rgba(57, 255, 20, 0.3);\
                color: #ffffff;\
            \}\
            .note \{\
                background-color: rgba(42, 42, 42, 0.9);\
                margin: 5px 0;\
                padding: 10px;\
                border-radius: 5px;\
                font-size: 14px;\
                display: flex;\
                justify-content: space-between;\
                align-items: center;\
                box-shadow: 0 2px 10px rgba(57, 255, 20, 0.3);\
            \}\
            .note form \{\
                display: flex;\
                align-items: center;\
            \}\
            .note button \{\
                background-color: #ff4d4d;\
                color: #1a1a1a;\
                padding: 5px 10px;\
                border: none;\
                border-radius: 5px;\
                cursor: pointer;\
                transition: background-color 0.3s, transform 0.2s;\
            \}\
            .note button:hover \{\
                background-color: #e60000;\
                transform: scale(1.05);\
            \}\
            .note button:active \{\
                transform: scale(0.95);\
            \}\
            .delete-all-notes-form button \{\
                background-color: #ff4d4d;\
                color: #1a1a1a;\
                padding: 10px 20px;\
                border: none;\
                border-radius: 5px;\
                cursor: pointer;\
                transition: background-color 0.3s, transform 0.2s;\
            \}\
            .delete-all-notes-form button:hover \{\
                background-color: #e60000;\
                transform: scale(1.05);\
            \}\
            .delete-all-notes-form button:active \{\
                transform: scale(0.95);\
            \}\
            /* Image button style */\
            .toggle-segments-btn \{\
                background: none;\
                border: none;\
                cursor: pointer;\
                padding: 0;\
                margin-bottom: 10px;\
            \}\
            .toggle-segments-btn img \{\
                width: 32px;\
                height: 32px;\
            \}\
            .toggle-segments-btn img:hover \{\
                transform: scale(1.1);\
                transition: transform 0.2s;\
            \}\
            /* Separator line between segments */\
            .segment-separator \{\
                border-top: 1px solid rgba(57, 255, 20, 0.3); /* More transparent */\
                margin: 10px 0;\
            \}\
            @media (max-width: 600px) \{\
                .segment, .email-list, .note \{\
                    padding: 8px;\
                \}\
                button, input, textarea, select, input[type="file"] \{\
                    font-size: 14px;\
                    padding: 8px;\
                \}\
                .toggle-segments-btn img \{\
                    width: 24px;\
                    height: 24px;\
                \}\
            \}\
            /* Drag and Drop Area */\
            .dropzone \{\
                border: 2px dashed #39FF14;\
                border-radius: 5px;\
                padding: 20px;\
                text-align: center;\
                color: #39FF14;\
                margin-top: 10px;\
                cursor: pointer;\
                transition: background-color 0.3s;\
            \}\
            .dropzone.dragover \{\
                background-color: rgba(51, 51, 51, 0.9);\
            \}\
            /* Footer */\
            .footer \{\
                color: #888888;\
                text-align: center;\
                margin-top: 20px;\
                font-size: 14px;\
            \}\
            /* Przyciski Usu\uc0\u324  */\
            .note button, .delete-all-notes-form button \{\
                background-color: #ff4d4d;\
                padding: 8px 12px;\
                border-radius: 5px;\
                transition: background-color 0.3s, transform 0.2s;\
            \}\
            .note button:hover, .delete-all-notes-form button:hover \{\
                background-color: #e60000;\
                transform: scale(1.05);\
            \}\
            .note button:active, .delete-all-notes-form button:active \{\
                transform: scale(0.95);\
            \}\
            /* Kolorystyka r\'f3\uc0\u380 norodna */\
            .segment-title \{\
                color: #39FF14;\
            \}\
            .segment-count \{\
                color: #FFD700;\
            \}\
            .checkbox-container label \{\
                color: #FFFFFF;\
            \}\
            /* Nowa sekcja do wy\uc0\u347 wietlania za\u322 \u261 cznik\'f3w */\
            .attachments-preview \{\
                display: flex;\
                flex-wrap: wrap;\
                gap: 10px;\
                margin-top: 10px;\
            \}\
            .attachment-item \{\
                background-color: rgba(42, 42, 42, 0.9);\
                border: 1px solid #39FF14;\
                border-radius: 5px;\
                padding: 5px 10px;\
                color: #FFFFFF;\
                font-size: 14px;\
                display: flex;\
                align-items: center;\
                max-width: 150px;\
                overflow: hidden;\
                text-overflow: ellipsis;\
                white-space: nowrap;\
            \}\
            .attachment-item span \{\
                margin-right: 5px;\
            \}\
            .attachment-item button \{\
                background: none;\
                border: none;\
                color: #ff4d4d;\
                cursor: pointer;\
                font-size: 16px;\
                line-height: 1;\
                padding: 0;\
                margin-left: auto;\
            \}\
            .attachment-item button:hover \{\
                color: #e60000;\
            \}\
            /* Licznik za\uc0\u322 \u261 cznik\'f3w */\
            .attachments-count \{\
                margin-top: 10px;\
                font-size: 14px;\
                color: #FFD700;\
            \}\
        </style>\
        <script>\
            const MAX_ATTACHMENTS = \{\{ max_attachments \}\};\
\
            function toggleEmailList(segmentId) \{\
                var content = document.getElementById(segmentId);\
                content.classList.toggle('show');\
            \}\
\
            function toggleSegmentList() \{\
                var segmentList = document.getElementById('segment-container');\
                segmentList.classList.toggle('show');\
            \}\
\
            function toggleSelectAllCheckboxes(button, containerId) \{\
                var container = document.getElementById(containerId);\
                var checkboxes = container.querySelectorAll('input[type="checkbox"]');\
                var allChecked = true;\
\
                // Check if all checkboxes are checked\
                for (var i = 0; i < checkboxes.length; i++) \{\
                    if (!checkboxes[i].checked) \{\
                        allChecked = false;\
                        break;\
                    \}\
                \}\
\
                // Toggle the checkboxes\
                var newCheckedStatus = !allChecked;\
                for (var i = 0; i < checkboxes.length; i++) \{\
                    checkboxes[i].checked = newCheckedStatus;\
                \}\
\
                // Update button text\
                if (newCheckedStatus) \{\
                    button.textContent = (containerId === 'segment-container') ? 'Odznacz wszystkie segmenty' : 'Odznacz wszystkie';\
                \} else \{\
                    button.textContent = (containerId === 'segment-container') ? 'Zaznacz wszystkie segmenty' : 'Zaznacz wszystkie';\
                \}\
            \}\
\
            function onSegmentCheckboxChange(segmentIndex) \{\
                var segmentCheckbox = document.getElementById('segment-' + segmentIndex);\
                var emailList = document.getElementById('emails-' + segmentIndex);\
                var emailCheckboxes = emailList.querySelectorAll('input[type="checkbox"]');\
                var toggleButton = emailList.querySelector('.checkbox-btn-container button');\
\
                for (var i = 0; i < emailCheckboxes.length; i++) \{\
                    emailCheckboxes[i].checked = segmentCheckbox.checked;\
                \}\
\
                // Update toggle button label\
                if (segmentCheckbox.checked) \{\
                    toggleButton.textContent = 'Odznacz wszystkie';\
                \} else \{\
                    toggleButton.textContent = 'Zaznacz wszystkie';\
                \}\
            \}\
\
            function onEmailCheckboxChange(segmentIndex) \{\
                var emailList = document.getElementById('emails-' + segmentIndex);\
                var emailCheckboxes = emailList.querySelectorAll('input[type="checkbox"]');\
                var segmentCheckbox = document.getElementById('segment-' + segmentIndex);\
                var allChecked = true;\
                var toggleButton = emailList.querySelector('.checkbox-btn-container button');\
\
                for (var i = 0; i < emailCheckboxes.length; i++) \{\
                    if (!emailCheckboxes[i].checked) \{\
                        allChecked = false;\
                        break;\
                    \}\
                \}\
\
                segmentCheckbox.checked = allChecked;\
\
                // Update toggle button label\
                if (allChecked) \{\
                    toggleButton.textContent = 'Odznacz wszystkie';\
                \} else \{\
                    toggleButton.textContent = 'Zaznacz wszystkie';\
                \}\
            \}\
\
            function showSpinner(spinnerId, buttonId) \{\
                document.getElementById(spinnerId).style.display = 'inline-block';\
                if (buttonId) \{\
                    document.getElementById(buttonId).disabled = true;\
                \}\
            \}\
\
            function hideSpinner(spinnerId, buttonId) \{\
                document.getElementById(spinnerId).style.display = 'none';\
                if (buttonId) \{\
                    document.getElementById(buttonId).disabled = false;\
                \}\
            \}\
\
            // Drag and Drop for File Attachments\
            document.addEventListener('DOMContentLoaded', function() \{\
                var dropzone = document.getElementById('dropzone');\
                var fileInput = document.getElementById('attachments');\
                var attachmentsPreview = document.getElementById('attachments-preview');\
                var attachmentsCount = document.getElementById('attachments-count');\
                var allFiles = []; // Array to hold all selected files\
\
                // Event listeners for drag and drop\
                dropzone.addEventListener('dragover', function(e) \{\
                    e.preventDefault();\
                    dropzone.classList.add('dragover');\
                \});\
\
                dropzone.addEventListener('dragleave', function(e) \{\
                    e.preventDefault();\
                    dropzone.classList.remove('dragover');\
                \});\
\
                dropzone.addEventListener('drop', function(e) \{\
                    e.preventDefault();\
                    dropzone.classList.remove('dragover');\
                    if (e.dataTransfer.files.length) \{\
                        appendFiles(e.dataTransfer.files);\
                    \}\
                \});\
\
                dropzone.addEventListener('click', function() \{\
                    fileInput.click();\
                \});\
\
                // Event listener for file input change\
                fileInput.addEventListener('change', function() \{\
                    appendFiles(fileInput.files);\
                \});\
\
                function isFileInList(file, fileList) \{\
                    for (var i = 0; i < fileList.length; i++) \{\
                        if (file.name === fileList[i].name && file.size === fileList[i].size && file.type === fileList[i].type) \{\
                            return true;\
                        \}\
                    \}\
                    return false;\
                \}\
\
                function appendFiles(files) \{\
                    for (var i = 0; i < files.length; i++) \{\
                        var file = files[i];\
                        if (!isFileInList(file, allFiles)) \{\
                            if (allFiles.length < MAX_ATTACHMENTS) \{\
                                allFiles.push(file);\
                            \} else \{\
                                alert(`Mo\uc0\u380 esz przes\u322 a\u263  maksymalnie $\{MAX_ATTACHMENTS\} za\u322 \u261 cznik\'f3w.`);\
                                break;\
                            \}\
                        \} else \{\
                            alert(`Plik $\{file.name\} ju\uc0\u380  zosta\u322  dodany.`);\
                        \}\
                    \}\
\
                    // Update the file input\
                    var dataTransfer = new DataTransfer();\
                    for (var i = 0; i < allFiles.length; i++) \{\
                        dataTransfer.items.add(allFiles[i]);\
                    \}\
                    fileInput.files = dataTransfer.files;\
\
                    // Update the attachments preview and count\
                    updateAttachmentsPreview();\
                    updateAttachmentsCount(allFiles.length);\
                \}\
\
                function updateAttachmentsPreview() \{\
                    attachmentsPreview.innerHTML = ''; // Clear existing previews\
                    for (var i = 0; i < allFiles.length; i++) \{\
                        var file = allFiles[i];\
                        var fileName = file.name;\
                        if (fileName.length > 15) \{\
                            fileName = fileName.substring(0, 12) + '...';\
                        \}\
\
                        var attachmentItem = document.createElement('div');\
                        attachmentItem.classList.add('attachment-item');\
\
                        var fileIcon = document.createElement('span');\
                        fileIcon.textContent = '
\f1 \uc0\u55357 \u56526 
\f0 '; // Paperclip icon\
                        attachmentItem.appendChild(fileIcon);\
\
                        var fileNameSpan = document.createElement('span');\
                        fileNameSpan.textContent = fileName;\
                        attachmentItem.appendChild(fileNameSpan);\
\
                        var removeButton = document.createElement('button');\
                        removeButton.type = 'button';\
                        removeButton.innerHTML = '&times;'; // '\'d7' symbol\
                        removeButton.dataset.index = i;\
                        removeButton.addEventListener('click', function() \{\
                            removeFile(this.dataset.index);\
                        \});\
                        attachmentItem.appendChild(removeButton);\
\
                        attachmentsPreview.appendChild(attachmentItem);\
                    \}\
                \}\
\
                function removeFile(index) \{\
                    allFiles.splice(index, 1);\
\
                    // Update the file input\
                    var dataTransfer = new DataTransfer();\
                    for (var i = 0; i < allFiles.length; i++) \{\
                        dataTransfer.items.add(allFiles[i]);\
                    \}\
                    fileInput.files = dataTransfer.files;\
\
                    updateAttachmentsPreview();\
                    updateAttachmentsCount(allFiles.length);\
                \}\
\
                function updateAttachmentsCount(count) \{\
                    attachmentsCount.textContent = `Za\uc0\u322 \u261 cznik\'f3w: $\{count\}/$\{MAX_ATTACHMENTS\}`;\
                \}\
\
                // Initialize attachments count\
                updateAttachmentsCount(0);\
            \});\
        </script>\
    </head>\
    <body>\
        <div class="container">\
            <h1>Ranges</h1>\
            <div class="user-info">\
                <p class="welcome">Witaj, \{\{ session['username'] \}\}! <a href="\{\{ url_for('logout') \}\}">Wyloguj si\uc0\u281 </a> | <a href="\{\{ url_for('settings') \}\}">Ustawienia konta</a></p>\
            </div>\
\
            \{% with messages = get_flashed_messages(with_categories=true) %\}\
              \{% if messages %\}\
                \{% for category, message in messages %\}\
                  <div class="flash-message \{\{ category \}\}">\
                    \{\{ message \}\}\
                  </div>\
                \{% endfor %\}\
              \{% endif %\}\
            \{% endwith %\}\
\
            <form method="post" enctype="multipart/form-data" onsubmit="showSpinner('spinner', 'send-button')">\
                <label>Temat:</label>\
                <input type="text" name="subject" required>\
\
                <label>Wiadomo\uc0\u347 \u263 :</label>\
                <textarea name="message" rows="5" required></textarea>\
\
                <!-- Przeniesiono przycisk "Wy\uc0\u347 lij" wy\u380 ej pod pole "Wiadomo\u347 \u263 " -->\
                <div class="button-container">\
                    <button type="submit" id="send-button">Wy\uc0\u347 lij</button>\
                    <div class="spinner" id="spinner"></div>\
                </div>\
\
                <!-- Pole za\uc0\u322 \u261 cznik\'f3w -->\
                <label>Za\uc0\u322 \u261 czniki:</label>\
                <input type="file" name="attachments" id="attachments" multiple style="display: none;">\
                <div id="dropzone" class="dropzone">\
                    Przeci\uc0\u261 gnij i upu\u347 \u263  pliki tutaj lub kliknij, aby wybra\u263 .\
                </div>\
                <!-- Sekcja do wy\uc0\u347 wietlania podgl\u261 du za\u322 \u261 cznik\'f3w -->\
                <div id="attachments-preview" class="attachments-preview"></div>\
                <!-- Licznik za\uc0\u322 \u261 cznik\'f3w -->\
                <div id="attachments-count" class="attachments-count">Za\uc0\u322 \u261 cznik\'f3w: 0/\{\{ max_attachments \}\}</div>\
\
                <label>Wybierz j\uc0\u281 zyk:</label>\
                <select id="language" name="language" required>\
                    <option value="Polski">Polski</option>\
                    <option value="Zagraniczny">Zagraniczny</option>\
                </select>\
\
                <h2>Segmenty</h2>\
                <!-- Image button -->\
                <button type="button" class="toggle-segments-btn" onclick="toggleSegmentList()">\
                    <img src="\{\{ url_for('static', filename='hammer.png') \}\}" alt="Toggle Segments">\
                </button>\
\
                <div id="segment-container" class="segment-list">\
                    <div class="checkbox-btn-container">\
                        <button type="button" onclick="toggleSelectAllCheckboxes(this, 'segment-container')">\
                            Zaznacz wszystkie segmenty\
                        </button>\
                    </div>\
                    \{% for segment, counts in segments.items() %\}\
                        \{% set segment_index = loop.index %\}\
                        <div class="segment" onclick="toggleEmailList('emails-\{\{ segment_index \}\}')">\
                            <input type="checkbox" name="segments" value="\{\{ segment \}\}" class="segment-checkbox" id="segment-\{\{ segment_index \}\}" onclick="event.stopPropagation(); onSegmentCheckboxChange(\{\{ segment_index \}\})">\
                            <label for="segment-\{\{ segment_index \}\}" class="segment-title" onclick="event.stopPropagation();">\
                                \{\{ segment \}\}:\
                                <span class="segment-count">Polski: \{\{ counts['Polski'] \}\}, Zagraniczny: \{\{ counts['Zagraniczny'] \}\}</span>\
                            </label>\
                        </div>\
                        <hr class="segment-separator">\
                        <div class="email-list" id="emails-\{\{ segment_index \}\}">\
                            <div class="checkbox-btn-container">\
                                <button type="button" onclick="toggleSelectAllCheckboxes(this, 'emails-\{\{ segment_index \}\}')">\
                                    Odznacz wszystkie\
                                </button>\
                            </div>\
                            \{% set emails_polski = get_emails_for_segment(data, segment, "Polski") %\}\
                            \{% set emails_zagraniczny = get_emails_for_segment(data, segment, "Zagraniczny") %\}\
                            \{% for email in emails_polski %\}\
                                <div class="checkbox-container">\
                                    <input type="checkbox" id="email-\{\{ segment_index \}\}-polski-\{\{ loop.index \}\}" class="email-checkbox-\{\{ segment_index \}\}" name="include_emails" value="\{\{ email \}\}" checked onchange="onEmailCheckboxChange(\{\{ segment_index \}\})">\
                                    <label for="email-\{\{ segment_index \}\}-polski-\{\{ loop.index \}\}">\{\{ email \}\} (Polski)</label>\
                                </div>\
                            \{% endfor %\}\
                            \{% for email in emails_zagraniczny %\}\
                                <div class="checkbox-container">\
                                    <input type="checkbox" id="email-\{\{ segment_index \}\}-zagraniczny-\{\{ loop.index \}\}" class="email-checkbox-\{\{ segment_index \}\}" name="include_emails" value="\{\{ email \}\}" checked onchange="onEmailCheckboxChange(\{\{ segment_index \}\})">\
                                    <label for="email-\{\{ segment_index \}\}-zagraniczny-\{\{ loop.index \}\}">\{\{ email \}\} (Zagraniczny)</label>\
                                </div>\
                            \{% endfor %\}\
                        </div>\
                    \{% endfor %\}\
                </div>\
            </form>\
\
            <div class="note-section">\
                <h3>Notatki</h3>\
                <form method="post" action="\{\{ url_for('add_note') \}\}" onsubmit="showSpinner('note-spinner')">\
                    <input type="text" name="note" placeholder="Dodaj notatk\uc0\u281 ..." required>\
                    <button type="submit">Dodaj notatk\uc0\u281 </button>\
                    <div class="spinner" id="note-spinner"></div>\
                </form>\
                <ul>\
                    \{% for note in notes %\}\
                        <li class="note">\
                            <span>\{\{ note.content \}\}</span>\
                            <form method="post" action="\{\{ url_for('delete_note', index=note.id) \}\}">\
                                <button type="submit">Usu\uc0\u324 </button>\
                            </form>\
                        </li>\
                    \{% endfor %\}\
                </ul>\
                \{% if notes %\}\
                    <form method="post" action="\{\{ url_for('delete_all_notes') \}\}" class="delete-all-notes-form">\
                        <button type="submit">Usu\uc0\u324  wszystkie notatki</button>\
                    </form>\
                \{% endif %\}\
            </div>\
\
            <!-- Zmodyfikowana stopka -->\
            <div class="footer">\
                &copy; DigitDrago\
            </div>\
        </div>\
    </body>\
    </html>\
    '''\
    return render_template_string(index_template, segments=segments, notes=notes, get_emails_for_segment=get_emails_for_segment, data=data, max_attachments=MAX_ATTACHMENTS)\
\
@app.route('/login')\
def login():\
    return "Login Page"\
\
@app.route('/settings')\
def settings():\
    return "Settings Page"\
\
@app.route('/logout')\
def logout():\
    session.pop('user_id', None)\
    return redirect(url_for('login'))\
\
@app.route('/add_note', methods=['POST'])\
def add_note():\
    return "Add Note"\
\
@app.route('/delete_note/<int:index>', methods=['POST'])\
def delete_note(index):\
    return "Delete Note"\
\
@app.route('/delete_all_notes', methods=['POST'])\
def delete_all_notes():\
    return "Delete All Notes"\
\
if __name__ == '__main__':\
    app.run(debug=True, host='0.0.0.0')\
}